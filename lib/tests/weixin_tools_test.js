// Generated by CoffeeScript 1.8.0
(function() {
  var WeixinTools, config, env, jsapi_ticket, json_test, menus, noncestr, options, p, should, signArgs, signature, timestamp, token, url, wxt, xml_test, _;

  should = require("should");

  p = require("commander");

  env = p.environment || 'development';

  _ = require('underscore');

  config = require('../config/config')[env];

  menus = config.menus;

  noncestr = "Wm3WZYTPz0wzccnW";

  jsapi_ticket = "sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg";

  timestamp = "1414587457";

  url = "http://mp.weixin.qq.com?params=value";

  signature = '0f9de62fce790f9a083d5c99e95740ceb90c27ed';

  signature = '0f9de62fce790f9a083d5c99e95740ceb90c27ed';

  signArgs = {
    noncestr: "Wm3WZYTPz0wzccnW",
    jsapi_ticket: "sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg",
    timestamp: "1414587457",
    url: "http://mp.weixin.qq.com?params=value"
  };

  WeixinTools = require("../weixin_tools");

  options = {
    appid: config.appid,
    secret: config.secret,
    payOptions: config.payOptions,
    jsApiList: config.jsApiList
  };

  wxt = new WeixinTools(options);

  console.dir(wxt);

  xml_test = "<xml>\n  <appid>wx2421b1c4370ec43b</appid>\n  <appid2><![CDATA[wx2421b1c4370ec43b]]></appid2>\n  <attach>支付测试</attach>\n  <body>JSAPI支付测试</body>\n  <mch_id>10000100</mch_id>\n  <nonce_str>1add1a30ac87aa2db72f57a2375d8fec</nonce_str>\n  <notify_url>http://wxpay.weixin.qq.com/pub_v2/pay/notify.v2.php</notify_url>\n  <openid>oUpF8uMuAJO_M2pxb1Q9zNjWeS6o</openid>\n  <out_trade_no>1415659990</out_trade_no>\n  <spbill_create_ip>14.23.150.211</spbill_create_ip>\n  <total_fee>1</total_fee>\n  <trade_type>JSAPI</trade_type>\n  <sign>0CB01533B8C1EF103065174F50BCA001</sign>\n</xml>";

  json_test = {
    "appid": 'wx2421b1c4370ec43b',
    "appid2": 'wx2421b1c4370ec43b',
    "attach": '支付测试',
    "body": 'JSAPI支付测试',
    "mch_id": 10000100,
    "nonce_str": '1add1a30ac87aa2db72f57a2375d8fec',
    "notify_url": 'http://wxpay.weixin.qq.com/pub_v2/pay/notify.v2.php',
    "openid": 'oUpF8uMuAJO_M2pxb1Q9zNjWeS6o',
    "out_trade_no": 1415659990,
    "spbill_create_ip": '14.23.150.211',
    "total_fee": 1,
    "trade_type": 'JSAPI',
    "sign": '0CB01533B8C1EF103065174F50BCA001'
  };

  token = null;

  describe("test weixin_tools", function() {
    before(function() {});
    describe("oauth", function() {
      return it("generateAuthorizeURL", function(done) {
        var url1, url2, url3;
        url1 = wxt.generateAuthorizeURL("http://www.baidu.com");
        console.log(url1);
        url2 = wxt.generateAuthorizeURL("http://www.baidu.com", "haha");
        console.log(url2);
        url3 = wxt.generateAuthorizeURL("http://www.baidu.com", "haha", "snsapi_userinfo");
        console.log(url3);
        return done();
      });
    });
    describe("pay", function() {
      it("makePaySignature", function(done) {
        var args, sign;
        args = {
          appid: 'wxd930ea5d5a258f4f',
          device_info: 1000,
          body: "test",
          nonce_str: 'ibuaiVcKdpRxkhJA',
          mch_id: wxt.payOptions.mchId
        };
        sign = wxt.makePaySignature(args);
        console.log("pay sign : " + sign);
        return done();
      });
      return it("getBrandWCPayRequestParams", function(done) {
        var order;
        order = {
          body: '吮指原味鸡',
          out_trade_no: 'kfc004',
          total_fee: 1,
          spbill_create_ip: "8.8.8.8",
          openid: "o-5Zdt8pmmpmYqXbTbDUpXwx_kOk",
          trade_type: 'JSAPI'
        };
        return wxt.getBrandWCPayRequestParams(order, function(err, body) {
          console.error("ERROR: " + err);
          console.dir(body);
          return done();
        });
      });
    });
    return describe("test", function() {
      it("xml 2 json", function(done) {
        return wxt.xml2json(xml_test, function(err, json) {
          console.dir(json);
          return done();
        });
      });
      return it("json 2 xml", function(done) {
        console.log(wxt.json2xml(json_test));
        return done();
      });
    });
  });

}).call(this);
