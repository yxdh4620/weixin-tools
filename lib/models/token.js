// Generated by CoffeeScript 1.8.0

/*
 * 用于获得 access_token, jsapi_ticket 的工具
 * 这里只负责从微信接口取，不负责本地的缓存
 */

(function() {
  var RequestUrls, assert, debuglog, loadAccessToken, loadJsapiTicket, request, _;

  debuglog = require("debug")("utils::token");

  assert = require("assert");

  request = require('request');

  _ = require('underscore');

  RequestUrls = require("../enums/request_urls");

  loadAccessToken = function(callback) {
    var options, url;
    console.log("appid: " + this.appid);
    url = "" + RequestUrls.GET_ACCESS_TOKEN_URL + "?grant_type=client_credential&appid=" + this.appid + "&secret=" + this.secret;
    options = {
      url: url,
      method: "GET",
      json: true
    };
    console.dir(callback);
    request(options, function(err, res, body) {
      if (err != null) {
        return callback(err);
      }
      if (_.isEmpty(body)) {
        return callback(new Error("result data is error"));
      }
      if ((body.errcode != null) && parseInt(body.errcode) !== 0) {
        return callback(new Error("errCode" + body.errcode + " " + body.errmsg));
      }
      if (body.access_token == null) {
        return callback(new Error("get access_token is null"));
      }
      return callback(null, body);
    });
  };

  loadJsapiTicket = function(access_token, callback) {
    var options, url;
    url = "" + RequestUrls.GET_JSAPI_TICKET_URL + "?access_token=" + access_token + "&type=jsapi";
    options = {
      url: url,
      method: "GET",
      json: true
    };
    request(options, function(err, res, body) {
      if (err != null) {
        return callback(err);
      }
      if (_.isEmpty(body)) {
        return callback(new Error("result data is error"));
      }
      if ((body.errcode != null) && parseInt(body.errcode) !== 0) {
        return callback(new Error("errCode" + body.errcode + " " + body.errmsg));
      }
      if (body.ticket == null) {
        return callback(new Error("get access_token is null"));
      }
      return callback(null, body);
    });
  };

  module.exports = {
    loadAccessToken: loadAccessToken,
    loadJsapiTicket: loadJsapiTicket
  };

}).call(this);
