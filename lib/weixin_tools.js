// Generated by CoffeeScript 1.8.0
(function() {
  var WeixinTools, assert, debuglog, menus, oauth, signature, token;

  debuglog = require("debug")("weixin_tools");

  assert = require("assert");

  token = require("./utils/token");

  menus = require("./utils/menus");

  signature = require("./utils/signature");

  oauth = require("./utils/oauth");


  /*
   * 微信的工具类
   */

  WeixinTools = (function() {
    function WeixinTools(appid, secret, jsApiList, isDebug) {
      debuglog("LOG [weixin_tools::constructor] start");
      this.appid = appid;
      this.secret = secret;
      this.isDebug = isDebug || false;
      this.jsApiList = jsApiList || [];
      assert(this.appid, "missing weixin appid");
      assert(this.secret, "missing weixin secret");
      return;
    }

    WeixinTools.prototype.loadAccessToken = function(callback) {
      return token.loadAccessToken(this.appid, this.secret, callback);
    };

    WeixinTools.prototype.loadJsapiTicket = token.loadJsapiTicket;

    WeixinTools.prototype.loadMenus = menus.loadMenus;

    WeixinTools.prototype.deleteMenus = menus.deleteMenus;

    WeixinTools.prototype.createMenus = menus.createMenus;

    WeixinTools.prototype.generateNonceStr = function() {
      return Math.random().toString(36).substr(2, 15);
    };

    WeixinTools.prototype.generateTimestamp = function() {
      return parseInt(Date.now() / 1000);
    };

    WeixinTools.prototype.makeSignature = function(args) {
      return signature.makeSignature(args);
    };

    WeixinTools.prototype.checkSignature = function(sign, args) {
      return signature.checkSignature(sign, args);
    };

    WeixinTools.prototype.generateConfig = function(url, jsapi_ticket) {
      var args, noncestr, result, sign, timestamp;
      noncestr = this.generateNonceStr();
      timestamp = this.generateTimestamp();
      args = {
        url: url,
        jsapi_ticket: jsapi_ticket,
        noncestr: noncestr,
        timestamp: timestamp
      };
      sign = this.makeSignature(args);
      result = {
        debug: this.isDebug,
        appId: this.appid,
        jsapi_ticket: jsapi_ticket,
        nonceStr: noncestr,
        timestamp: timestamp,
        signature: sign,
        jsApiList: this.jsApiList || []
      };
      return result;
    };

    WeixinTools.prototype.generateAuthorizeURL = function(redirect, state, scope) {
      return oauth.generateAuthorizeURL(this.appid, redirect, state, scope);
    };

    WeixinTools.prototype.loadAuthorzeToken = function(code, callback) {
      return oauth.loadAuthorzeToken(this.appid, this.secret, code, callback);
    };

    WeixinTools.prototype.refreshAuthorzeToken = function(refresh_token, callback) {
      return oauth.refreshAuthorzeToken(this.appid, refresh_token, callback);
    };

    WeixinTools.prototype.loadUserInfo = function(openid, authorze_token, lang, callback) {
      return oauth.loadUserInfo(openid, authorze_token, lang, callback);
    };

    WeixinTools.prototype.makePaySignature = function(args) {};

    return WeixinTools;

  })();

  module.exports = WeixinTools;

}).call(this);
